version: '3.7'

services:
  mongo:
    image: mongo:4.2.3-bionic
    restart: always
    volumes:
      - persist_mongo:/data
    command: >
          bash -c "
          (
            sleep 3 &&
            mongo --eval \"rs.initiate({'_id':'opensilex','members':[{'_id':0,'host':'mongo:27017'}]})\" &&
            wait 
          ) & docker-entrypoint.sh --replSet opensilex
          "
    
  
  rdf4j:
    image: eclipse/rdf4j-workbench:amd64-3.5.0
    env_file: opensilex-phis.env
    volumes:
       - persist_rdf4j:/var/rdf4j
    ports:
       - 8080:8080
  
  opensilex-phis:
    build: .
    env_file: opensilex-phis.env
    ports:
       - 8081:8081
       - 8666:8666

    volumes:
      - ./config:/home/opensilex/config
      - ./logs/opensilex:/home/opensilex/logs
      - persist_opensilex:/home/opensilex/data

    command: >
          bash -c "
            ([ ! -f /home/opensilex/data/first_install ] && touch /home/opensilex/data/first_install && ./bin/opensilex.sh system install) 
            ./bin/opensilex.sh server start --host=192.168.1.94 --port=8081 --adminPort=4081
          "
    
  nginx:
    image: nginx:1.17
    env_file: opensilex-phis.env
    volumes:
       - ./nginx.conf:/tmp/nginx.conf
       - ./logs/nginx/log:/var/log/nginx
    ports:
       - "80:80"
    command: /bin/bash -c "envsubst < /tmp/nginx.conf > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

volumes:
  persist_rdf4j:
  persist_mongo:
  persist_opensilex:
